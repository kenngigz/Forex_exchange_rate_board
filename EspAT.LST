C51 COMPILER V9.55   ESPAT                                                                 04/12/2019 12:10:20 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE ESPAT
OBJECT MODULE PLACED IN EspAT.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE EspAT.c OPTIMIZE(9,SPEED) REGFILE(.\DisplayRoulette.ORC) BROWSE DEBUG OB
                    -JECTEXTEND TABS(2)

line level    source

   1          #include "display_slot.h"
   2          #include <intrins.h>
   3          #include <string.h>
   4          
   5          
   6          #define NELEMS(a)  (sizeof(a) / sizeof((a)[0]))
   7          
   8          
   9          
  10          const char code * code messages[] = {
  11          "0,CONNECT\r\n",    //1
  12          "1,CONNECT\r\n",    //2
  13          "2,CONNECT\r\n",    //3
  14          "3,CONNECT\r\n",    //4
  15          "0,CLOSED\r\n",     //5
  16          "1,CLOSED\r\n",     //6
  17          "2,CLOSED\r\n",     //7
  18          "3,CLOSED\r\n",     //8
  19          "ERROR\r\n",        //9
  20          "OK\r\n",           //10
  21          "ERROR\r\n",        //11
  22          "WIFI GOT IP\r\n",  //12
  23          "+IPD,",            //13
  24          "SEND OK\r\n",        //14
  25          "SEND FAIL\r\n",      //15
  26          "+CIFSR:APIP,",       //16
  27          "+CIFSR:APMAC,",      //17
  28          "+CIFSR:STAIP,",      //18
  29          "+CIFSR:STAMAC,",     //19
  30          "+CIPMUX:",           //20
  31          "WIFI DISCONNECT\r\n", //21 
  32          "STATUS:\r\n",         //22
  33          "+CWMODE:\r\n"         //23
  34          };
  35          
  36          extern bit pass_accept;
  37          unsigned char pdata epsBuff[64];
  38          unsigned char pdata sndBuff[48];
  39          //unsigned char pdata staip[16];
  40          //unsigned char pdata staip[16];
  41          unsigned char connected,answer;
  42          unsigned char dat,len,cannel;
  43          bit gotip;
  44          static unsigned char indexT;
  45          void  uart() interrupt 4 using 1
  46          {
  47   1        static unsigned char indexR;
  48   1        unsigned char i,j;
  49   1        bit success;
  50   1        if (_testbit_(RI0))
  51   1        {
  52   2          if (dat)
  53   2          {
  54   3            epsBuff[indexR++]=SBUF0;
C51 COMPILER V9.55   ESPAT                                                                 04/12/2019 12:10:20 PAGE 2   

  55   3            dat--;
  56   3            if (dat==0)
  57   3              answer=13;
  58   3            return;
  59   3          }
  60   2          if (indexR>=NELEMS(epsBuff)) 
  61   2            indexR=NELEMS(epsBuff)-1;
  62   2          i=(epsBuff[indexR++]=SBUF0);
  63   2          if (i=='\n') //a line received
  64   2          {
  65   3            if (indexR==2)
  66   3            {
  67   4              indexR=0;
  68   4              return;
  69   4            }
  70   3            epsBuff[indexR]=0xff;
  71   3            indexR=0;
  72   3            success=0;
  73   3            for (i=0;(i<NELEMS(messages))&&(!success);i++)
  74   3             {
  75   4               j=0;
  76   4               while (messages[i][j]==epsBuff[j])
  77   4                 j++;
  78   4               if (messages[i][j]==0)
  79   4                 success=1;                    
  80   4             }
  81   3            if (success)
  82   3               switch (i)
  83   3                {
  84   4                  case 1:
  85   4                  case 2:
  86   4                  case 3:
  87   4                  case 4:
  88   4                    //connect group
  89   4                    j=1;
  90   4                    j<<=(i-1);
  91   4                    connected|=j;
  92   4                    led=0;
  93   4              //      change++;
  94   4                    pass_accept=0;
  95   4                   break;
  96   4                  case 5:
  97   4                  case 6:
  98   4                  case 7:
  99   4                  case 8:
 100   4                    //closed group
 101   4                    j=1;
 102   4                    j<<=(i-5);
 103   4                    connected&=~j;
 104   4                    if (connected==0)
 105   4                     led=1;
 106   4                  break;
 107   4                  case 9: //error
 108   4                    answer=9;
 109   4                  break;
 110   4                  case 10: //ok
 111   4                    answer=10;
 112   4                  break;
 113   4                  
 114   4                  case 12: //got ip
 115   4                     answer=12;
 116   4                     gotip=1;
C51 COMPILER V9.55   ESPAT                                                                 04/12/2019 12:10:20 PAGE 3   

 117   4                  break;
 118   4                  case 16: //apip
 119   4                     answer =16;
 120   4                   break;
 121   4                  case 17: //apmac
 122   4                    answer=17;
 123   4                   break;
 124   4                  case 18: //staip
 125   4                    answer=18;
 126   4                   break;
 127   4                  case 19: //stamac
 128   4                    answer=19;
 129   4                   break;
 130   4                  case 21:
 131   4                    answer=21;
 132   4                    gotip=0;
 133   4                  break;
 134   4                  default:
 135   4                    answer=i;
 136   4                  break;
 137   4                }
 138   3             
 139   3          }
 140   2          else
 141   2          {
 142   3            if ((i=='>')&&(indexR==1)) //wait send data to send
 143   3            {
 144   4              answer=255;
 145   4              return;
 146   4            }
 147   3            
 148   3            if (i==':') //espsciali for +IPD
 149   3            {
 150   4              if (epsBuff[0]!='+')
 151   4                return;
 152   4              if (epsBuff[1]!='I')
 153   4                return;
 154   4              if (epsBuff[2]!='P')
 155   4                return;
 156   4              if (epsBuff[3]!='D')
 157   4                return;
 158   4              dat=epsBuff[7]&0xf;
 159   4              if (indexR!=9)    //not more of 99 bytes
 160   4              {
 161   5                dat*=10;
 162   5                dat+=epsBuff[8]&0xf;
 163   5              }
 164   4              len=dat;
 165   4              indexR=0;
 166   4              cannel=epsBuff[5];
 167   4            }
 168   3          }
 169   2        }
 170   1        
 171   1        if (_testbit_(TI0))
 172   1        {
 173   2      
 174   2            if ((j=sndBuff[indexT])!=0)
 175   2              SBUF0=sndBuff[indexT++];
 176   2            else
 177   2              indexT=0;
 178   2      
C51 COMPILER V9.55   ESPAT                                                                 04/12/2019 12:10:20 PAGE 4   

 179   2        }
 180   1        
 181   1      }
 182          
 183          void initEps(const char code *tbl[])
 184          {
 185   1        unsigned char i;
 186   1      
 187   1        for (i=0;;i++)
 188   1         {     
 189   2           answer=0;
 190   2           strcpy(sndBuff,tbl[i]);
 191   2           if (*sndBuff==0)
 192   2             break;
 193   2           TI0=1;
 194   2           while(answer!=10)  //ok
 195   2           {
 196   3             WATCHDOG;  
 197   3             if (answer==12) //got ip
 198   3              break;         
 199   3           }       
 200   2         }    
 201   1      }
 202          
 203          bit SendToESP (const char *comm,unsigned char answ,unsigned char t)
 204          {
 205   1        unsigned int timer;
 206   1        while(indexT!=0)
 207   1          WATCHDOG; 
 208   1        strcpy(sndBuff,comm);
 209   1        answer=0;
 210   1        TI0=1;  
 211   1        if (answ==0) // no aswer need
 212   1          return 1;
 213   1        timer= ((unsigned int) t) * 100;; //set to 2.5 sec
 214   1        while(answer!=answ)  //ok
 215   1           {
 216   2             WATCHDOG;  
 217   2             if (TF2H) //use timer 2 at 500khz    
 218   2             {
 219   3               TF2H=0;
 220   3               if (timer--==0) 
 221   3                 return 0;
 222   3             }         
 223   2           }
 224   1        return 1;
 225   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    580    ----
   CONSTANT SIZE    =    297    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =    112    ----
   DATA SIZE        =      7       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
