C51 COMPILER V9.55   MBI                                                                   04/12/2019 12:10:20 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MBI
OBJECT MODULE PLACED IN MBI.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE MBI.c OPTIMIZE(9,SPEED) REGFILE(.\DisplayRoulette.ORC) BROWSE DEBUG OBJE
                    -CTEXTEND TABS(2)

line level    source

   1          #include "display_slot.h"
   2          #include <intrins.h>
   3          
   4          
   5          
   6          
   7          #define NO_LACH            -1
   8          
   9          #define DATA_LACH          1
  10          #define GLOBAL_LACH        3
  11          #define READ_CONFIGURATION 5
  12          #define EABLE_ERRORDETECT  7
  13          #define READ_ERRORSTATUS   9
  14          #define WRITE_CONFIG       11
  15          #define RESET_PWM          13
  16          
  17          
  18          
  19          unsigned char xdata screen[NUM_OF_MBI*NUM_OF_COLUMNS*8] _at_ 0x100-0x20;
  20          
  21          
  22           
  23          //b1,a1,f2,f1,g1,c2,b2,a2,D1,d2,e2,e1,d1,c1,D2,g2
  24          //0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15
  25           
  26          const unsigned char code cs1[8]={ 1, 0,13,12,11, 3, 4, 8};    
  27          const unsigned char code cs2[8]={ 7,  6, 5, 9,10, 2,15,14};
  28          
  29          
  30          struct caddr {
  31                          unsigned int address;
  32                          unsigned char column;
  33                          unsigned char row;
  34                          unsigned char segment;
  35                        } complicate;
  36          
  37          
  38          void address()
  39           {
  40   1         unsigned int chip,col,seg;
  41   1                     
  42   1         chip = complicate.row;
  43   1         col= complicate.column/2; 
  44   1         if ((complicate.column&1)==0)  
  45   1          seg=cs1[complicate.segment];
  46   1         else
  47   1          seg=cs2[complicate.segment];     
  48   1         complicate.address=NUM_OF_MBI*(16*col+seg)+chip;
  49   1      }
  50           
  51          
  52                                               //  0    1    2    3    4    5    6    7    8    9    - 
  53          const unsigned char code numbers[16]= {0xfc,0x60,0xda,0xf2,0x66,0xb6,0xbe,0xe0,0xfe,0xf6,0x02,0x00,0x00,0x
             -00,0x00};
C51 COMPILER V9.55   MBI                                                                   04/12/2019 12:10:20 PAGE 2   

  54          
  55          
  56          extern union my_data idata my_data;
  57          
  58          void ptr(char c) //c ->PBBXNNNN POINT,BRIGHTNESS,NUMBER
  59           {
  60   1          unsigned char d,k;
  61   1          d=numbers[c&0x0f];
  62   1          if (c&0x80) 
  63   1            d|=0x1; //add a point
  64   1          k=my_data.dat.bright[(c>>4)&0x3];
  65   1          for (complicate.segment=0;complicate.segment<8;complicate.segment++)
  66   1           {       
  67   2             address();
  68   2             if ((d&0x80)!=0)
  69   2               screen[complicate.address]=k;
  70   2             else
  71   2               screen[complicate.address]=0;
  72   2             d<<=1;
  73   2           }
  74   1           complicate.column++;
  75   1           if (complicate.column>=6)
  76   1           {
  77   2             complicate.column-=6;
  78   2             if (++complicate.row>=NUM_OF_MBI)
  79   2               complicate.row=0;
  80   2                
  81   2           }
  82   1           return;
  83   1       }                       
  84          
  85          void gotoxy(unsigned char x,unsigned char y)
  86           {
  87   1         complicate.column=x;
  88   1         complicate.row=y;
  89   1       }
  90           
  91          void SetPoint(unsigned char b,bit sr) //Set the two led's for the clock
  92           {
  93   1         if (sr)
  94   1          {
  95   2           screen[16*NUM_OF_MBI+15*NUM_OF_MBI+1]=my_data.dat.bright[b]; //set G2
  96   2           screen[16*NUM_OF_MBI+ 7*NUM_OF_MBI+1]=my_data.dat.bright[b]; //set A2     
  97   2          }
  98   1         else
  99   1          {
 100   2           screen[16*NUM_OF_MBI+15*NUM_OF_MBI+1]=0; //set G2
 101   2           screen[16*NUM_OF_MBI+ 7*NUM_OF_MBI+1]=0; //set A2     
 102   2          }    
 103   1       }
 104          
 105           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    230    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
C51 COMPILER V9.55   MBI                                                                   04/12/2019 12:10:20 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
